@model Playground.Controllers.EgressLotDetail

@{
    ViewData["Title"] = "Create Lot";
    ViewData["Active"] = "CreateLot";
}
@using (Html.BeginForm("Index", "Lot", FormMethod.Post, new { id = "frmLot" }))
{
   

    <div class="row">
        <div class="col-md-12 border" id="lotFrm" style="float:left;">
            <div style="height:70vh; overflow:hidden; overflow-y:auto; padding:25px">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                
                <div class="form-group row mb-2">
                    <label class="col-sm-2 col-form-label" asp-for="AuctionId">Product Id</label>
                    <div class="col-md-4">
                        <div>
                            <input asp-for="AuctionId" class="form-control" value="" />
                            <span asp-validation-for="AuctionId" class="text-danger"></span>
                        </div>
                    </div>
                    <label class="col-sm-2 col-form-label" asp-for="LotId">Item Id</label>
                    <div class="col-md-4">
                        <div>
                            <input asp-for="LotId" class="form-control" value="" />
                            <span asp-validation-for="LotId" class="text-danger"></span>
                        </div>
                    </div>
                </div>
                <div class="form-group row mb-2">
                    <label class="col-sm-2 col-form-label" asp-for="OpeningPrice">Manufacturing Price</label>
                    <div class="col-md-4">
                        <div>
                            <input asp-for="OpeningPrice" class="form-control" value="" />
                            <span asp-validation-for="OpeningPrice" class="text-danger"></span>
                        </div>
                    </div>
                    <label class="col-sm-2 col-form-label" asp-for="ReservePrice">Selling price</label>
                    <div class="col-md-4">
                        <div>
                            <input asp-for="ReservePrice" class="form-control" value="" />
                            <span asp-validation-for="ReservePrice" class="text-danger"></span>
                        </div>
                    </div>
                </div>
                <div class="form-group row mb-2">
                    <label class="col-sm-2 col-form-label" asp-for="Quantity">Quantity</label>
                    <div class="col-md-4">
                        <div>
                            <input asp-for="Quantity" class="form-control" value="1" />
                            <span asp-validation-for="Quantity" class="text-danger"></span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
      
    </div>

    <div class="row">
        <label id="lotResponse" style="display:none" class="text-danger"></label>
    </div>

    <div class="row">
        <div class="col-md-12 mb-2" style="margin-top: 15px;">
            <button type="button" class="btn btn-sm btn-primary" title="Submit lot" style="float: right;" id="btnSubmit">Submit</button>
            <button type="button" class="btn btn-sm btn-primary" title="Edit lot" style="float: right; margin-right: 5px" id="btnEdit">Edit</button>
            <button type="button" class="btn btn-sm btn-primary" title="Get lot details" style="float: right; margin-right: 5px" id="btnGetLot">Get details</button>
            <button type="button" class="btn btn-sm btn-danger" title="Delete lot" style="float: right; margin-right: 5px" id="btnDelete">
                Delete
            </button>
            <button type="button" class="btn btn-sm btn-danger" title="Clear lot details" style="float: right; margin-right: 5px" id="btnClear" onclick="this.form.reset();">
                Reset
            </button>
            <button type="button" class="btn btn-sm btn-success" title="Reset lot details to default" style="float: right; margin-right: 5px" id="btnReset" onclick="location.reload()">
                Refresh
            </button>
        </div>
    </div>

}
<div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true" style="z-index: 9999999999;">
    <div class="modal-dialog modal-xl">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Lot Property Info</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="accordion" id="accordionDef1">
                    <div class="container-fluid">
                        <div class="row">
                            <div class="col-md-6">
                                <div class="accordion-item">
                                    <h2 class="accordion-header" id="acc1">
                                        <button aria-controls="colps1" aria-expanded="false" class="accordion-button collapsed" data-bs-target="#colps1" data-bs-toggle="collapse" type="button">
                                            Auction house
                                        </button>
                                    </h2>
                                    <div aria-labelledby="acc1" class="accordion-collapse collapse" data-bs-parent="#accordionDef1" id="colps1" style="">
                                        <div class="accordion-body">
                                            <strong>
                                                Definition of Auction house.
                                            </strong>
                                        </div>
                                    </div>
                                </div>
                                <div class="accordion-item">
                                    <h2 class="accordion-header" id="acc2">
                                        <button aria-controls="colps2" aria-expanded="false" class="accordion-button collapsed" data-bs-target="#colps2" data-bs-toggle="collapse" type="button">
                                            Auction
                                        </button>
                                    </h2>
                                    <div aria-labelledby="acc2" class="accordion-collapse collapse" data-bs-parent="#accordionDef1" id="colps2">
                                        <div class="accordion-body">
                                            <strong>
                                                Definition of auction.
                                            </strong>
                                        </div>
                                    </div>
                                </div>
                                <div class="accordion-item">
                                    <h2 class="accordion-header" id="acc3">
                                        <button aria-controls="colps3" aria-expanded="false" class="accordion-button collapsed" data-bs-target="#colps3" data-bs-toggle="collapse" type="button">
                                            Lot
                                        </button>
                                    </h2>
                                    <div aria-labelledby="acc3" class="accordion-collapse collapse" data-bs-parent="#accordionDef1" id="colps3">
                                        <div class="accordion-body">
                                            <strong>
                                                Definition of lot.
                                            </strong>
                                        </div>
                                    </div>
                                </div>
                                <div class="accordion-item">
                                    <h2 class="accordion-header" id="acc4">
                                        <button aria-controls="colps4" aria-expanded="false" class="accordion-button collapsed" data-bs-target="#colps4" data-bs-toggle="collapse" type="button">
                                            Opening price
                                        </button>
                                    </h2>
                                    <div aria-labelledby="acc4" class="accordion-collapse collapse" data-bs-parent="#accordionDef1" id="colps4" style="">
                                        <div class="accordion-body">
                                            <strong>
                                                Definition for opening price.
                                            </strong>
                                        </div>
                                    </div>
                                </div>
                                <div class="accordion-item">
                                    <h2 class="accordion-header" id="acc5">
                                        <button aria-controls="colps5" aria-expanded="false" class="accordion-button collapsed" data-bs-target="#colps5" data-bs-toggle="collapse" type="button">
                                            Reserve price
                                        </button>
                                    </h2>
                                    <div aria-labelledby="acc5" class="accordion-collapse collapse" data-bs-parent="#accordionDef1" id="colps5" style="">
                                        <div class="accordion-body">
                                            <strong>
                                                Definition for Reserve price.
                                            </strong>
                                        </div>
                                    </div>
                                </div>

                            </div>
                            <div class="col-md-6">
                                <div class="accordion-item">
                                    <h2 class="accordion-header" id="acc6">
                                        <button aria-controls="colps6" aria-expanded="false" class="accordion-button collapsed" data-bs-target="#colps6" data-bs-toggle="collapse" type="button">
                                            Quantity
                                        </button>
                                    </h2>
                                    <div aria-labelledby="acc6" class="accordion-collapse collapse" data-bs-parent="#accordionDef1" id="colps6" style="">
                                        <div class="accordion-body">
                                            <strong>
                                                Definition of Quantity.
                                            </strong>
                                        </div>
                                    </div>
                                </div><div class="accordion-item">
                                    <h2 class="accordion-header" id="acc7">
                                        <button aria-controls="colps7" aria-expanded="true" class="accordion-button collapsed" data-bs-target="#colps7" data-bs-toggle="collapse" type="button">
                                            Bidding type
                                        </button>
                                    </h2>
                                    <div aria-labelledby="acc7" class="accordion-collapse collapse" data-bs-parent="#accordionDef1" id="colps7">
                                        <div class="accordion-body">
                                            <strong>
                                                Definition of  Bidding type.
                                            </strong>
                                        </div>
                                    </div>
                                </div>
                                <div class="accordion-item">
                                    <h2 class="accordion-header" id="acc8">
                                        <button aria-controls="colps8" aria-expanded="false" class="accordion-button collapsed" data-bs-target="#colps8" data-bs-toggle="collapse" type="button">
                                            Reserve type
                                        </button>
                                    </h2>
                                    <div aria-labelledby="acc8" class="accordion-collapse collapse" data-bs-parent="#accordionDef1" id="colps8">
                                        <div class="accordion-body">
                                            <strong>
                                                Definition of Reserve type.
                                            </strong>
                                        </div>
                                    </div>
                                </div>
                                <div class="accordion-item">
                                    <h2 class="accordion-header" id="acc9">
                                        <button aria-controls="colps9" aria-expanded="false" class="accordion-button collapsed" data-bs-target="#colps9" data-bs-toggle="collapse" type="button">
                                            Increment type
                                        </button>
                                    </h2>
                                    <div aria-labelledby="acc9" class="accordion-collapse collapse" data-bs-parent="#accordionDef1" id="colps9" style="">
                                        <div class="accordion-body">
                                            <strong>
                                                Definition of Increment type.
                                            </strong>
                                        </div>
                                    </div>
                                </div>
                                <div class="accordion-item">
                                    <h2 class="accordion-header" id="acc10">
                                        <button aria-controls="colps10" aria-expanded="true" class="accordion-button collapsed" data-bs-target="#colps10" data-bs-toggle="collapse" type="button">
                                            Buy it now
                                        </button>
                                    </h2>
                                    <div aria-labelledby="acc10" class="accordion-collapse collapse" data-bs-parent="#accordionDef1" id="colps10">
                                        <div class="accordion-body">
                                            <strong>
                                                Definition for Buy it now.
                                            </strong>
                                        </div>
                                    </div>
                                </div>


                            </div>
                            <div class="col-md-12">&nbsp;</div>
                            <div class="col-md-6">
                                <div class="accordion-item">
                                    <h2 class="accordion-header" id="acc11">
                                        <button aria-controls="colps11" aria-expanded="false" class="accordion-button collapsed" data-bs-target="#colps11" data-bs-toggle="collapse" type="button">
                                            Time zone
                                        </button>
                                    </h2>
                                    <div aria-labelledby="acc11" class="accordion-collapse collapse" data-bs-parent="#accordionDef1" id="colps11">
                                        <div class="accordion-body">
                                            <strong>
                                                Definition for Time zone.
                                            </strong>
                                        </div>
                                    </div>
                                </div><div class="accordion-item">
                                    <h2 class="accordion-header" id="acc12">
                                        <button aria-controls="colps12" aria-expanded="false" class="accordion-button collapsed" data-bs-target="#colps12" data-bs-toggle="collapse" type="button">
                                            Extension time in seconds
                                        </button>
                                    </h2>
                                    <div aria-labelledby="acc12" class="accordion-collapse collapse" data-bs-parent="#accordionDef1" id="colps12">
                                        <div class="accordion-body">
                                            <strong>
                                                Definition of Extension time in seconds.
                                            </strong>
                                        </div>
                                    </div>
                                </div><div class="accordion-item">
                                    <h2 class="accordion-header" id="acc19">
                                        <button aria-controls="colps19" aria-expanded="true" class="accordion-button collapsed" data-bs-target="#colps19" data-bs-toggle="collapse" type="button">
                                            Currency
                                        </button>
                                    </h2>
                                    <div aria-labelledby="acc19" class="accordion-collapse collapse" data-bs-parent="#accordionDef1" id="colps19">
                                        <div class="accordion-body">
                                            <strong>
                                                Definition of Currency.
                                            </strong>
                                        </div>
                                    </div>
                                </div>
                                <div class="accordion-item">
                                    <h2 class="accordion-header" id="acc20">
                                        <button aria-controls="colps20" aria-expanded="false" class="accordion-button collapsed" data-bs-target="#colps20" data-bs-toggle="collapse" type="button">
                                            Piecemeal
                                        </button>
                                    </h2>
                                    <div aria-labelledby="acc20" class="accordion-collapse collapse" data-bs-parent="#accordionDef1" id="colps20" style="">
                                        <div class="accordion-body">
                                            <strong>
                                                Definition of Piecemeal.
                                            </strong>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="accordion-item">
                                    <h2 class="accordion-header" id="acc21">
                                        <button aria-controls="colps21" aria-expanded="false" class="accordion-button collapsed" data-bs-target="#colps21" data-bs-toggle="collapse" type="button">
                                            Bidding suspended
                                        </button>
                                    </h2>
                                    <div aria-labelledby="acc21" class="accordion-collapse collapse" data-bs-parent="#accordionDef1" id="colps21">
                                        <div class="accordion-body">
                                            <strong>
                                                Definition of Bidding suspended.
                                            </strong>
                                        </div>
                                    </div>
                                </div><div class="accordion-item">
                                    <h2 class="accordion-header" id="acc22">
                                        <button aria-controls="colps22" aria-expanded="true" class="accordion-button collapsed" data-bs-target="#colps22" data-bs-toggle="collapse" type="button">
                                            Start time
                                        </button>
                                    </h2>
                                    <div aria-labelledby="acc22" class="accordion-collapse collapse" data-bs-parent="#accordionDef1" id="colps22">
                                        <div class="accordion-body">
                                            <strong>
                                                Definition for Start time.
                                            </strong>
                                        </div>
                                    </div>
                                </div><div class="accordion-item">
                                    <h2 class="accordion-header" id="23">
                                        <button aria-controls="colps23" aria-expanded="false" class="accordion-button collapsed" data-bs-target="#colps23" data-bs-toggle="collapse" type="button">
                                            Ends from
                                        </button>
                                    </h2>
                                    <div aria-labelledby="23" class="accordion-collapse collapse" data-bs-parent="#accordionDef1" id="colps23" style="">
                                        <div class="accordion-body">
                                            <strong>
                                                Definition for Ends from.
                                            </strong>
                                        </div>
                                    </div>
                                </div><div class="accordion-item">
                                    <h2 class="accordion-header" id="acc24">
                                        <button aria-controls="colps24" aria-expanded="false" class="accordion-button collapsed" data-bs-target="#colps24" data-bs-toggle="collapse" type="button">
                                            Increment
                                        </button>
                                    </h2>
                                    <div aria-labelledby="acc24" class="accordion-collapse collapse" data-bs-parent="#accordionDef1" id="colps24" style="">
                                        <div class="accordion-body">
                                            <strong>
                                                Definition of Increment.
                                            </strong>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script src="~/lib/jquery/dist/jquery.js"></script>
<script>
    let scntDiv = $('#p_scents');
    let lotResponseMsg = $('#lotResponse');
    let todayDate = new Date();
    let startDate = new Date();
    let endDate = new Date();
    startDate.setDate(startDate.getDate() - 1);
    endDate.setDate(endDate.getDate() + 1);

    $(document).ready(function () {
        $('#btnVerify').click(function () {
            lotResponseMsg.html("");
            showLoader();
            $.ajax({
                url: '@Url.Action("VerifyLot")',
                type: "POST",
                data: getSerializeForm(),
                dataType: 'json',
                success: function (lotResponse) {
                    hideLoader();
                    verifyAndCreateLotResponseHandling(lotResponse,"verify");
                },
                error: function (xhr) {
                    hideLoader();
                    lotResponseMsg.html("Service Unavailable.");
                    lotResponseMsg.addClass("text-danger");
                    console.log('Request Status: ' + xhr.status + ' Status Text: ' + xhr.statusText + ' ' + xhr.responseText);
                }
            });
        });

        $('#btnSubmit').click(function () {
            lotResponseMsg.html("");
            showLoader();

            $.ajax({
                url: '@Url.Action("CreateLot")',
                type: "POST",
                data: getSerializeForm(),
                dataType: 'json',
                success: function (lotResponse) {
                    hideLoader();
                    verifyAndCreateLotResponseHandling(lotResponse, "create");
                },
                error: function (xhr) {
                    hideLoader();
                    lotResponseMsg.html("Service Unavailable.");
                    lotResponseMsg.addClass("text-danger");
                    console.log('Request Status: ' + xhr.status + ' Status Text: ' + xhr.statusText + ' ' + xhr.responseText);
                }
            });
        });

        $('#btnEdit').click(function () {
            lotResponseMsg.html("");
            showLoader();

            $.ajax({
                url: '@Url.Action("UpdateLot")',
                type: "PUT",
                data: getSerializeForm(),
                dataType: 'json',
                success: function (lotResponse) {
                    hideLoader();
                    verifyAndCreateLotResponseHandling(lotResponse, "create");
                },
                error: function (xhr) {
                    hideLoader();
                    lotResponseMsg.html("Service Unavailable.");
                    lotResponseMsg.addClass("text-danger");
                    console.log('Request Status: ' + xhr.status + ' Status Text: ' + xhr.statusText + ' ' + xhr.responseText);
                }
            });
        });

        $('.addRange').click(function() {
            var row = createAddRangeRow($('#p_scents tr').length);
            var $tr = $('<tr>').append(row);
            scntDiv.append($tr);
        });

        $('#btnDownload').click(function() {
            let IsPiecemealFound = false, BiddingSuspendedFound = false;
            let jsonString = "{";
            let formAllElements = $('form#frmLot').serializeArray();
            $.each(formAllElements,
                function(index, dictionaryElement) {
                    if (dictionaryElement.name !== "__RequestVerificationToken" && dictionaryElement.name.includes('increment[') === false) {
                        if (dictionaryElement.name === "isPiecemeal") {
                            if (!IsPiecemealFound) {
                                IsPiecemealFound = true;
                                jsonString += createJsonObjectString(dictionaryElement);
                                return true;
                            }
                        } else if (dictionaryElement.name === "BiddingSuspended") {
                            if (!BiddingSuspendedFound) {
                                BiddingSuspendedFound = true;
                                jsonString += createJsonObjectString(dictionaryElement);
                                return true;
                            }
                        } else {
                            jsonString += createJsonObjectString(dictionaryElement);
                        }
                    }
                });

            let incrementJson = '';
            let incrementRows = $('#p_scents tr');
            for (let i = 0; i < incrementRows.length; i++) {
                let lowVal = $(incrementRows[i]).find('.low').val();
                let highVal = $(incrementRows[i]).find('.high').val();
                let incrementVal = $(incrementRows[i]).find('.increment').val();
                incrementJson += '{"low":' + (lowVal === '' ? null : lowVal) + ',';
                incrementJson += '"high":' + (highVal === '' ? null : highVal) + ',';
                incrementJson += '"incrementValue":' + (incrementVal === '' ? null : incrementVal) + '},';
            }
            jsonString += '"increment":[' + incrementJson + ']';
            jsonString += "}";

            const a = document.createElement("a");
            const file = new Blob([jsonString], { type: "text/plain" });
            a.href = URL.createObjectURL(file);
            a.download = "lotdetails.json";
            a.click();
        });

        $('#btnGetLot').click(function() {
            let AuctionId = Number($("#AuctionId").val());
            let lotId = Number($("#LotId").val());
            var errorList = "";
            if (AuctionId > 0 && lotId > 0) {
                showLoader();

                $.ajax({
                    url: '@Url.Action("LotDetails", "Marketplace")',
                    type: "POST",
                    data: { auctionid: AuctionId, lotId: lotId },
                    dataType: 'json',
                    success: function (lotResponse) {
                        hideLoader();
                        if (lotResponse != null && lotResponse.isValid === false && lotResponse.validationResults != null && lotResponse.validationResults.length > 0) {
                            lotResponseMsg.show();
                            $.each(lotResponse.validationResults,
                                function(index, val) {
                                    errorList += "<li>" + val.description + "</li>";
                                });

                            lotResponseMsg.html("<ul>" + errorList + "</ul>");
                            lotResponseMsg.removeClass("text-success");
                            lotResponseMsg.addClass("text-danger");
                        }
                        else
                        {
                            if (lotResponse.isValid) {
                                lotResponseMsg.hide();
                                bidLotDetails(lotResponse.lotDetail);
                            }
                            else {
                                lotResponseMsg.show();
                                lotResponseMsg.html(lotResponse.message);
                                lotResponseMsg.addClass("text-danger");
                            }
                        }
                    },
                    error: function (xhr) {
                        hideLoader();
                        lotResponseMsg.html("Service Unavailable.");
                        lotResponseMsg.addClass("text-danger");
                        console.log('Request Status: ' + xhr.status + ' Status Text: ' + xhr.statusText + ' ' + xhr.responseText);
                    }
                });
            }
        });

        $('#btnClear').click(function() {
            $('form#frmLot input').attr('value', '');
            $('#p_scents tr:gt(0)').remove();
            $('#p_scents tr:first input').attr('value', '0');
        });

        $('#btnDelete').click(function () {
            let AuctionId = Number($("#AuctionId").val());
            let LotId = Number($("#LotId").val());
            var errorList = "";
            showLoader();

            $.ajax({
                url: '@Url.Action("DeleteLot")',
                type: "DELETE",
                data: { auctionid: AuctionId, lotid: LotId },
                dataType: 'json',
                success: function (lotResponse) {
                    hideLoader();
                    if (lotResponse != null && lotResponse.isValid === false && lotResponse.validationResults != null && lotResponse.validationResults.length > 0) {
                        lotResponseMsg.show();
                        $.each(lotResponse.validationResults,
                            function(index, val) {
                                errorList += "<li>" + val.description + "</li>";
                            });

                        lotResponseMsg.html("<ul>" + errorList + "</ul>");
                        lotResponseMsg.removeClass("text-success");
                        lotResponseMsg.addClass("text-danger");
                    }
                    else
                    {
                        if (lotResponse.isValid) {
                            lotResponseMsg.show();
                            lotResponseMsg.html("Lot deleted successfully.");
                            lotResponseMsg.addClass("text-success");
                            $('#btnClear').click();
                        }
                        else {
                            lotResponseMsg.show();
                            lotResponseMsg.html(lotResponse.message);
                            lotResponseMsg.addClass("text-danger");
                        }
                    }
                },
                error: function (xhr) {
                    hideLoader();
                    lotResponseMsg.html("Service Unavailable.");
                    lotResponseMsg.addClass("text-danger");
                    console.log('Request Status: ' + xhr.status + ' Status Text: ' + xhr.statusText + ' ' + xhr.responseText);
                }
            });
        });
    });

    $('#StartTime').val(startDate.toISOString().slice(0, 19));
    $('#EndsFrom').val(endDate.toISOString().slice(0, 19));

    function getSerializeForm() {
        debugger;
        let formAllElements = $('form#frmLot').serializeArray();
        var serializedForm = formAllElements.filter(function(obj) {
            if (obj.name.includes('increment[') || obj.name.includes('EgressIsPiecemeal') || obj.name.includes('BiddingSuspended')) {
                return false;
            }
            return true;
        });

        let incrementRows = $('#p_scents tr');
        for (let i = 0; i < incrementRows.length; i++) {
            let lowVal = $(incrementRows[i]).find('.low').val();
            let highVal = $(incrementRows[i]).find('.high').val();
            let incrementVal = $(incrementRows[i]).find('.increment').val();
            serializedForm.push(
                { name: "increment[" + i + "].low", value: (lowVal === '' ? null : lowVal) },
                { name: "increment[" + i + "].high", value: (highVal === '' ? null : highVal) },
                { name: "increment[" + i + "].incrementValue", value: (incrementVal === '' ? null : incrementVal) }
            );
        }

        serializedForm.push({ name: "EgressIsPiecemeal", value: $('#EgressIsPiecemeal').prop('checked') });
        serializedForm.push({ name: "BiddingSuspended", value: $('#BiddingSuspended').prop('checked') });

        return serializedForm;
    }

    function verifyAndCreateLotResponseHandling(lotResponse, responseFrom) {
        var errorList = "";
        if (lotResponse != null && lotResponse.isValid === false && lotResponse.validationResults != null && lotResponse.validationResults.length > 0) {
            lotResponseMsg.show();
            $.each(lotResponse.validationResults,
                function(index, val) {
                    errorList += "<li>" + val.description + "</li>";
                });

            lotResponseMsg.html("<ul>" + errorList + "</ul>");
            lotResponseMsg.removeClass("text-success");
            lotResponseMsg.addClass("text-danger");
        } else {
            if (lotResponse.isValid) {
                $.each(lotResponse.validationResults,
                    function (index, val) {
                        errorList += "<li>" + val.description + "</li>";
                    });
                lotResponseMsg.show();
                if (responseFrom === "verify") {
                    lotResponseMsg.html("Lot details are valid. Please click submit to create lot. \n" + "<ul class='text-warning'>" + errorList + "</ul>");
                }
                else if (responseFrom === "create") {
                    lotResponseMsg.html("Lot created successfully. \n" + "<ul class='text-warning'>" + errorList + "</ul>");
                }
                lotResponseMsg.removeClass("text-danger");
                lotResponseMsg.addClass("text-success");
                bidLotDetails(lotResponse.lotDetail);
            }
            else {
                lotResponseMsg.show();
                lotResponseMsg.html(lotResponse.message);
                lotResponseMsg.addClass("text-danger");
            }
        }
    }

    function createJsonObjectString(dictionaryElement) {
        let fieldName = dictionaryElement.name;
        let fieldVal = dictionaryElement.value;
        if (Number(dictionaryElement.value) > 0) {
            return '"' + fieldName + '":' + fieldVal + ',';
        } else {
            return '"' + fieldName + '":"' + fieldVal + '",';
        }
    }

    function removeRangeRow(row) {
        var i = $('#p_scents tr').length;
        if (i > 1) {
            $(row).closest('tr').remove();
        }
        return false;
    }

    function createAddRangeRow(rowNumber) {
        var row =   '<td> <input id="increment_'+ rowNumber +'_low" name="increment['+ rowNumber +'].low" class="low form-control" /> </td>'+
                    '<td> <input id="increment_'+ rowNumber +'_high" name="increment['+ rowNumber +'].high" class="high form-control" /></td>' +
                    '<td> <input id="increment_'+ rowNumber +'_incrementValue" name="increment['+ rowNumber +'].incrementValue" class="increment form-control" /></td>'+
                    '<td><a class="removeRange btn btn-sm" onclick="removeRangeRow(this)"><span title="Delete" class="fa fa-minus text-danger"></span></a></td>';
        return row;
    }

    function bidLotDetails(lotDetails) {
        if (lotDetails != null) {
            for (var prop in lotDetails) {
                if (prop === 'increment') {
                    $('#p_scents tr:gt(0)').remove();
                    for (var range in lotDetails[prop]) {
                        if ($('#increment_' + range + '_low').length < 1) {
                            var $tr = $('<tr>').append(createAddRangeRow(range));
                            scntDiv.append($tr);
                        }
                        setFormControlValue('#increment_' + range + '_low', lotDetails[prop][range].low);
                        setFormControlValue('#increment_' + range + '_high', lotDetails[prop][range].high);
                        setFormControlValue('#increment_' + range + '_incrementValue', lotDetails[prop][range].incrementValue);
                    }
                }
                else {
                    debugger;
                    if (prop.toUpperCase() == 'ISPIECEMEAL') {
                        setFormControlValue('#EgressIsPiecemeal', lotDetails[prop]);
                    }
                    else {
                        setFormControlValue('#' + toTitleCase(prop), lotDetails[prop]);
                    }
                }
            }
        }
    }

    function setFormControlValue(controlName, controlVal) {
        var frmLot = $('form#frmLot');
        var control = $(frmLot).find(controlName);
        if (control.length > 0)
        {
            if (control.prop('type') === 'checkbox') {
                control.prop('checked', controlVal);
            }
            else if (controlName === '#StartTime' || controlName === '#EndsFrom')
            {
                control.val(controlVal.split('Z')[0]);
            }
            else
            {
                control.val(controlVal);
            }
        }
    }

    function toTitleCase(str) {
        return str.replace(/(?:^|\s)\w/g, function(match) {
            return match.toUpperCase();
        });
    }
</script>
